{"ast":null,"code":"var _jsxFileName = \"/home/george/helida/client/src/components/SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUpForm(_ref) {\n  _s();\n\n  let {\n    onLogin\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\"); // const [imageUrl, setImageUrl] = useState(\"\");\n\n  const [bio, setBio] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password,\n        password_confirmation: passwordConfirmation,\n        bio\n      })\n    }).then(r => {\n      setIsLoading(false);\n\n      if (r.ok) {\n        r.json().then(user => onLogin(user));\n      } else {\n        r.json().then(err => setErrors(err.errors));\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"username\",\n        autoComplete: \"off\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"password\",\n        children: \"Password Confirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        id: \"password_confirmation\",\n        value: passwordConfirmation,\n        onChange: e => setPasswordConfirmation(e.target.value),\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"bio\",\n        children: \"Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        rows: \"3\",\n        id: \"bio\",\n        value: bio,\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: isLoading ? \"Loading...\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: errors.map(err => /*#__PURE__*/_jsxDEV(Error, {\n        children: err\n      }, err, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"5L3RT1Q1GNgaH6fIqUvwRG8dqzs=\");\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","useState","Button","Error","Input","FormField","Label","Textarea","SignUpForm","onLogin","username","setUsername","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","bio","setBio","errors","setErrors","isLoading","setIsLoading","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","password_confirmation","then","r","ok","json","user","err","target","value","map"],"sources":["/home/george/helida/client/src/components/SignUpForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\n\nfunction SignUpForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  // const [imageUrl, setImageUrl] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password,\n        password_confirmation: passwordConfirmation,\n        bio,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"email\">Email</Label>\n        <Input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password Confirmation</Label>\n        <Input\n          type=\"password\"\n          id=\"password_confirmation\"\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      {/* <FormField>\n        <Label htmlFor=\"imageUrl\">Profile Image</Label>\n        <Input\n          type=\"text\"\n          id=\"imageUrl\"\n          value={imageUrl}\n          onChange={(e) => setImageUrl(e.target.value)}\n        />\n      </FormField> */}\n      <FormField>\n        <Label htmlFor=\"bio\">Bio</Label>\n        <Textarea\n          rows=\"3\"\n          id=\"bio\"\n          value={bio}\n          onChange={(e) => setBio(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default SignUpForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}