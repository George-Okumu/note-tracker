{"ast":null,"code":"// import React, {useState} from \"react\";\n// import NavBar from \"../components/NavBar\";\n// import { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\n// function Settings({user}) {\n//     const [username, setUsername] = useState(`${user.username}`);\n//     const [email, setEmail] = useState(`${user.email}`);\n//     const [password, setPassword] = useState(\"\");\n//     const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n//     // const [imageUrl, setImageUrl] = useState(\"\");\n//     const [bio, setBio] = useState(`${user.bio}`);\n//     const [errors, setErrors] = useState([]);\n//     const [isLoading, setIsLoading] = useState(false);\n//     function handleUpdate() {\n//         fetch(`/users/${id}`, {\n//           method: \"PATCH\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({ \n//             username: username,\n//             email: email,\n//             password: password,\n//             bio: bio\n//          }),\n//         })\n//           .then((r) => r.json())\n//           .then(onUpdateSpice);\n//       }\n//     return (\n//         <>\n//             <div className=\"flex min-h-screen  2xl:max-w-screen-2xl 2xl:mx-auto 2xl:border-x-2 2xl:border-gray-200 dark:2xl:border-zinc-700\">\n//                 <aside className=\" w-1/6 py-10 pl-10  min-w-min  border-r border-gray-300 dark:border-zinc-700  hidden md:block \">\n//                     <NavBar />\n//                 </aside>\n//                 <main class=\"flex-1 py-10  px-5 sm:px-10\">\n//                     <div class=\"max-w-2xl mx-auto bg-white\">\n//                         <form onSubmit={handleSubmit}>\n//                             <FormField>\n//                                 <Label htmlFor=\"username\">Username</Label>\n//                                 <Input\n//                                     type=\"text\"\n//                                     id=\"username\"\n//                                     autoComplete=\"off\"\n//                                     value={username}\n//                                     onChange={(e) => setUsername(e.target.value)}\n//                                 />\n//                             </FormField>\n//                             <FormField>\n//                                 <Label htmlFor=\"email\">Email</Label>\n//                                 <Input\n//                                     type=\"email\"\n//                                     id=\"email\"\n//                                     value={email}\n//                                     onChange={(e) => setEmail(e.target.value)}\n//                                 />\n//                             </FormField>\n//                             <FormField>\n//                                 <Label htmlFor=\"password\">Password</Label>\n//                                 <Input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     autoComplete=\"current-password\"\n//                                 />\n//                             </FormField>\n//                             <FormField>\n//                                 <Label htmlFor=\"password\">Password Confirmation</Label>\n//                                 <Input\n//                                     type=\"password\"\n//                                     id=\"password_confirmation\"\n//                                     value={passwordConfirmation}\n//                                     onChange={(e) => setPasswordConfirmation(e.target.value)}\n//                                     autoComplete=\"current-password\"\n//                                 />\n//                             </FormField>\n//                             <FormField>\n//                                 <Label htmlFor=\"bio\">Bio</Label>\n//                                 <Textarea\n//                                     rows=\"3\"\n//                                     id=\"bio\"\n//                                     value={bio}\n//                                     onChange={(e) => setBio(e.target.value)}\n//                                 />\n//                             </FormField>\n//                             <FormField>\n//                                 <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n//                             </FormField>\n//                             <FormField>\n//                                 {errors.map((err) => (\n//                                     <Error key={err}>{err}</Error>\n//                                 ))}\n//                             </FormField>\n//                         </form>\n//                     </div>\n//                 </main>\n//             </div>\n//         </>\n//     );\n// }\n// export default Settings;","map":{"version":3,"names":[],"sources":["/home/george/helida/note-tracker/src/pages/Settings.js"],"sourcesContent":["// import React, {useState} from \"react\";\n// import NavBar from \"../components/NavBar\";\n// import { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\n\n\n// function Settings({user}) {\n//     const [username, setUsername] = useState(`${user.username}`);\n//     const [email, setEmail] = useState(`${user.email}`);\n//     const [password, setPassword] = useState(\"\");\n//     const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n//     // const [imageUrl, setImageUrl] = useState(\"\");\n//     const [bio, setBio] = useState(`${user.bio}`);\n//     const [errors, setErrors] = useState([]);\n//     const [isLoading, setIsLoading] = useState(false);\n\n//     function handleUpdate() {\n//         fetch(`/users/${id}`, {\n//           method: \"PATCH\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({ \n//             username: username,\n//             email: email,\n//             password: password,\n//             bio: bio\n//          }),\n//         })\n//           .then((r) => r.json())\n//           .then(onUpdateSpice);\n//       }\n//     return (\n//         <>\n//             <div className=\"flex min-h-screen  2xl:max-w-screen-2xl 2xl:mx-auto 2xl:border-x-2 2xl:border-gray-200 dark:2xl:border-zinc-700\">\n//                 <aside className=\" w-1/6 py-10 pl-10  min-w-min  border-r border-gray-300 dark:border-zinc-700  hidden md:block \">\n//                     <NavBar />\n//                 </aside>\n\n//                 <main class=\"flex-1 py-10  px-5 sm:px-10\">\n//                     <div class=\"max-w-2xl mx-auto bg-white\">\n//                         <form onSubmit={handleSubmit}>\n//                             <FormField>\n//                                 <Label htmlFor=\"username\">Username</Label>\n//                                 <Input\n//                                     type=\"text\"\n//                                     id=\"username\"\n//                                     autoComplete=\"off\"\n//                                     value={username}\n//                                     onChange={(e) => setUsername(e.target.value)}\n//                                 />\n//                             </FormField>\n//                             <FormField>\n//                                 <Label htmlFor=\"email\">Email</Label>\n//                                 <Input\n//                                     type=\"email\"\n//                                     id=\"email\"\n//                                     value={email}\n//                                     onChange={(e) => setEmail(e.target.value)}\n//                                 />\n//                             </FormField>\n//                             <FormField>\n//                                 <Label htmlFor=\"password\">Password</Label>\n//                                 <Input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     autoComplete=\"current-password\"\n//                                 />\n//                             </FormField>\n//                             <FormField>\n//                                 <Label htmlFor=\"password\">Password Confirmation</Label>\n//                                 <Input\n//                                     type=\"password\"\n//                                     id=\"password_confirmation\"\n//                                     value={passwordConfirmation}\n//                                     onChange={(e) => setPasswordConfirmation(e.target.value)}\n//                                     autoComplete=\"current-password\"\n//                                 />\n//                             </FormField>\n//                             <FormField>\n//                                 <Label htmlFor=\"bio\">Bio</Label>\n//                                 <Textarea\n//                                     rows=\"3\"\n//                                     id=\"bio\"\n//                                     value={bio}\n//                                     onChange={(e) => setBio(e.target.value)}\n//                                 />\n//                             </FormField>\n//                             <FormField>\n//                                 <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n//                             </FormField>\n//                             <FormField>\n//                                 {errors.map((err) => (\n//                                     <Error key={err}>{err}</Error>\n//                                 ))}\n//                             </FormField>\n//                         </form>\n//                     </div>\n//                 </main>\n//             </div>\n//         </>\n//     );\n// }\n\n// export default Settings;"],"mappings},"metadata":{},"sourceType":"module"}