{"ast":null,"code":"var _jsxFileName = \"/home/george/helida/note-tracker/src/pages/fileupload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport storage from \"../firebase/firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload() {\n  _s();\n\n  // State to store uploaded file\n  const [file, setFile] = useState(\"\");\n  console.log(file);\n  const allInputs = {\n    imgUrl: ''\n  };\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs); // progress\n\n  const [percent, setPercent] = useState(0);\n\n  function handleChange(event) {\n    setFile(event.target.files[0]);\n  }\n\n  const handleUpload = () => {\n    if (!file) {\n      alert(\"Please upload an image first!\");\n    }\n\n    const storageRef = ref(storage, `/files/${file.name}`); // progress can be paused and resumed. It also exposes progress updates.\n    // Receives the storage reference and the file to upload.\n\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const percent = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100); // update progress\n\n      setPercent(percent);\n    }, err => console.log(err), () => {\n      // download url\n      getDownloadURL(uploadTask.snapshot.ref).then(url => {\n        console.log(url);\n        setImageAsUrl(prevObject => ({ ...prevObject,\n          imgUrl: url\n        }));\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange,\n      accept: \"/image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload to Firebase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [percent, \" \\\"% done\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUpload, \"s8aq4nR3oxlLNB62hv2OmlItBOA=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","storage","ref","uploadBytesResumable","getDownloadURL","FileUpload","file","setFile","console","log","allInputs","imgUrl","imageAsUrl","setImageAsUrl","percent","setPercent","handleChange","event","target","files","handleUpload","alert","storageRef","name","uploadTask","on","snapshot","Math","round","bytesTransferred","totalBytes","err","then","url","prevObject"],"sources":["/home/george/helida/note-tracker/src/pages/fileupload.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport storage from \"../firebase/firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n\nfunction FileUpload() {\n    // State to store uploaded file\n    const [file, setFile] = useState(\"\");\n\n    console.log(file);\n    const allInputs = { imgUrl: '' }\n    const [imageAsUrl, setImageAsUrl] = useState(allInputs)\n\n    // progress\n    const [percent, setPercent] = useState(0);\n\n    function handleChange(event) {\n        setFile(event.target.files[0]);\n    }\n\n    const handleUpload = () => {\n        if (!file) {\n            alert(\"Please upload an image first!\");\n        }\n\n        const storageRef = ref(storage, `/files/${file.name}`);\n\n        // progress can be paused and resumed. It also exposes progress updates.\n        // Receives the storage reference and the file to upload.\n        const uploadTask = uploadBytesResumable(storageRef, file);\n\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                const percent = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n\n                // update progress\n                setPercent(percent);\n            },\n            (err) => console.log(err),\n            () => {\n                // download url\n                getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n                    console.log(url);\n                    setImageAsUrl(prevObject => ({...prevObject, imgUrl: url}))\n\n                });\n            }\n        );\n    };\n\n    return (\n        <div className=\"App\">\n\n            <input type=\"file\" onChange={handleChange} accept=\"/image/*\" />\n            <button onClick={handleUpload}>Upload to Firebase</button>\n            <p>{percent} \"% done\"</p>\n\n\n        </div>\n    )\n\n}\n\nexport default FileUpload;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,EAAcC,oBAAd,EAAoCC,cAApC,QAA0D,kBAA1D;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EAClB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EAEAS,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACA,MAAMI,SAAS,GAAG;IAAEC,MAAM,EAAE;EAAV,CAAlB;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAACW,SAAD,CAA5C,CANkB,CAQlB;;EACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,CAAD,CAAtC;;EAEA,SAASiB,YAAT,CAAsBC,KAAtB,EAA6B;IACzBV,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAP;EACH;;EAED,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAI,CAACd,IAAL,EAAW;MACPe,KAAK,CAAC,+BAAD,CAAL;IACH;;IAED,MAAMC,UAAU,GAAGpB,GAAG,CAACD,OAAD,EAAW,UAASK,IAAI,CAACiB,IAAK,EAA9B,CAAtB,CALuB,CAOvB;IACA;;IACA,MAAMC,UAAU,GAAGrB,oBAAoB,CAACmB,UAAD,EAAahB,IAAb,CAAvC;IAEAkB,UAAU,CAACC,EAAX,CACI,eADJ,EAEKC,QAAD,IAAc;MACV,MAAMZ,OAAO,GAAGa,IAAI,CAACC,KAAL,CACXF,QAAQ,CAACG,gBAAT,GAA4BH,QAAQ,CAACI,UAAtC,GAAoD,GADxC,CAAhB,CADU,CAKV;;MACAf,UAAU,CAACD,OAAD,CAAV;IACH,CATL,EAUKiB,GAAD,IAASvB,OAAO,CAACC,GAAR,CAAYsB,GAAZ,CAVb,EAWI,MAAM;MACF;MACA3B,cAAc,CAACoB,UAAU,CAACE,QAAX,CAAoBxB,GAArB,CAAd,CAAwC8B,IAAxC,CAA8CC,GAAD,IAAS;QAClDzB,OAAO,CAACC,GAAR,CAAYwB,GAAZ;QACApB,aAAa,CAACqB,UAAU,KAAK,EAAC,GAAGA,UAAJ;UAAgBvB,MAAM,EAAEsB;QAAxB,CAAL,CAAX,CAAb;MAEH,CAJD;IAKH,CAlBL;EAoBH,CA/BD;;EAiCA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBAEI;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAEjB,YAA7B;MAA2C,MAAM,EAAC;IAAlD;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAEI,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAA,WAAIN,OAAJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;GA3DQT,U;;KAAAA,U;AA6DT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}